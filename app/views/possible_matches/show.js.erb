<% content_for :show do %>
$('#possible_matches').html("<%= escape_javascript(render('show_possibilities'), locals: {possible_matches: @contemplated_piece , @suggested_pieces}%>")
(function(){
	var app = angular.module('GodsOfRiotry', ['ngRoute', 'ngAnimate']);

	app.controller('PossibleMatches', ['$scope', '$timeout', '$interval', '$sce', 
					   function($scope, $timeout, $interval, $sce){
					   	
					   	$scope.suggested_tops = function(){
					   		this = new Array;

					   		var temp = gon.possible_matches_suggested_tops

					   		for(i = 0; i < temp.length; i++)
						   		this += {
						   			id: temp[i].id,
						   			image: temp[i].image.picture,
						   			price: temp[i].price,
			  						description: temp[i].description,
			  						merch_type: temp[i].merch_type,
			  						standalone: temp[i].standalone
						   		}
						   	}
					   	}();

					   	$scope.suggested_bottoms = function(){
					   			this = new Array;

					   			var temp = gon.possible_matches_suggested_bottoms

					   			for(i = 0; i < temp.length; i++){
					   				this += {
					   					id: temp[i].id,
					   					image: temp[i].image.picture,
					   					price: temp[i].price,
					   					description: temp[i].description,
					   					merch_type: temp[i].merch_type,
					   					standalone: temp[i].standalone
					   				}
					   			}	
					   	}();


					   	$scope.tops = function(){
					   			this = new Array;

					   			var temp = gon.possible_matches_suggested_tops
					   			
					   			var list = gon.possible_matches_extra_tops

					   			var standalonetops = gon.gor_clothing_standalone_tops

					   			for(i = 0; i < list.length; i++){
					   				temp.push(list[i]);
					   			}
						   		
						   		for(i = 0; i < standalonetops.length; i++){
					   				temp.push(standalonetops[i]);
					   			}

					   			for(i = 0; i < temp.length; i++){
					   				this += {
					   					id: temp[i].id,
					   					image: temp[i].image.picture,
					   					price: temp[i].price,
					   					description: temp[i].description,
					   					merch_type: temp[i].merch_type,
					   					standalone: temp[i].standalone
					   				}
					   			}	
					   	}();

					   	$scope.bottoms = function(){
					   			this = new Array;

					   			var temp = gon.possible_match_suggested_bottoms

					   			var list = gon.possible_match_extra_bottoms
					   			
					   			var standalonebottoms = gon.gor_clothing_standalone_bottoms

					   			for(i = 0; i < list.length; i++){
					   				temp.push(list[i]);
					   			}

					   			for(i = 0; i < standalonebottoms.length; i++){
					   				temp.push(standalonebottoms[i])
					   			}
					   			
					   			for(i = 0; i < temp.length; i++){
					   				this += {
					   					id: temp[i].id,
					   					image: temp[i].image.picture,
					   					price: temp[i].price,
					   					description: temp[i].description,
					   					merch_type: temp[i].merch_type,
					   					standalone: temp[i].standalone
					   				}
					   			}
					   	}();
					   

					   	$scope.contemplated_piece = function(){
					   		this = new Array;

				   			var temp = gon.contemplated_piece
				   			
				   			this += {
					   			id: temp.id, 
					   			image: temp.image.picture,
					   			price: temp.price,
					   			description: temp.description,
					   			merch_type: temp.merch_type,
					   			standalone: temp.standalone
				   			}
					   	}();

					   	$scope.suggested_pieces = function(){
					   		this = new Array;

					   		var temp = gon.suggested_pieces

					   		for(i = 0; i < temp.length; i++){
					   			this += {
					   				id: temp[i].id,
					   				image: temp[i].image.picture,
					   				price: temp[i].price,
					   				description: temp[i].description,
					   				merch_type: temp[i].merch_type,
					   				standalone: temp[i].standalone
					   			}

					   		}
					   	}();


						function placeholder(){
							var element = this,
						
							temp = {suggested_pieces: {if ($('#non_suggested_bottom_<%= gor_clothing.id %>').length){
												element.find('#non_suggested_bottom_<%= gor_clothing.id %>');
											} ||
										         if ($('#non_suggested_top_<%= gor_clothing.id %>').length){
										         		element.find('#non_suggested_top_<%= gor_clothing.id %>');
											} ||
											if ($('#suggested_piece_<%= suggested_piece.id %>').length){
										         		element.find('#suggested_piece_<%= suggested_piece.id %>');
											}},
								  contemplated_piece: {if $('#contemplated_piece_<%=@contemplated_piece.id%>').length){
												element.find('#contemplated_piece_<%= @contemplated_piece.id%>');
											}},
								  standalone_tops: {if ($('#standalone_tops_<%= gor_clothing.id%>').length){
								  				element.find('#standalone_tops_<%= gor_clothing.id %>');
								  		      }},
								  standalone_bottoms: {if ($('#standalone_bottoms_<%= gor_clothing.id %>').length){
								  				element.find($('#standalone_bottoms_<%= gor_clothing.id %>');
								  			}}
							};				    
							
							switch(temp){
								case temp.suggested_pieces:
								break;

								case temp.contemplated_piece:
									timeout(function(){
										$scope.temporary_match = 
										if 
										  
									}, 6000);
								break;

								case temp.standalone_tops:
								break;

								case temp.standalone_bottoms:
								break;

								default:
							}
						}


						$('#possible_matches').keydown(function(e) {
							
							clearInterval(TogglePieces());
						    
						    switch(e.which) {
						        case 37: // left
						        break;

						        case 38: // up
						        break;

						        case 39: // right
						        break;

						        case 40: // down
						        break;

						        default: return; // exit this handler for other keys
						    }
						    e.preventDefault(); // prevent the default action (scroll / move caret)
						});



					   	var array = $scope.suggested_pieces;

					   	$timeout(function(){
					   		$scope.suggested_piece = array[array.length - 1];
					   	}, 100);

					   	var index = 0;

					   	var TogglePieces = $interval(function(){
					   		if(index > array.length - 1){
					   			index = 0;
					   		}
					   		$scope.suggested_piece = array[index];
					   		index++;
					   	}, 8000);

					   }]);

	app.animation('.possible_pieces', ['$timeout', function($timeout){

		return {
			enter: function(element, done){

				var img = angular.element(element.children()[0]);
				var price = angular.element(element.children()[1]);
				var description = angular.element(element.children()[2]);

				img.css({
					opacity: 0
				});
				price.css({
					opacity: 0
				});
				description.css({
					opacity: 0
				});
				img.animate({
					opacity: 1
				}, 500, function(){
					img.on('mouseover', function(){
						price.css({opacity: 1});
						description.css({opacity: 1});
					}).off('mouseover', function(){
						price.css({opacity: 0});
						description.css({opacity: 0});
					});
				}());
			},

			leave: function(element, done){

				var img = angular.element(element.children()[0]);
				var price = angular.element(element.children()[1]);
				var description = angular.element(element.children()[2]);

				img.css({
					opacity: 1
				});

				img.animate({
					opacity: 0
				}, 500);
			}
		};
	}]);
})();
<%end%>

